name: PyInstaller build

<<<<<<< HEAD
on:
  push:
    paths-ignore:
      - ".github/workflows/build-docs.yml"
      - "docs/**"
      - "docs-resources/**"
      - "mkdocs.yml"
      - "Dockerfile"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            artifact_name: Genemod_Catmaker_Linux64_glibc2.31+.tar.xz
            python_version: "3.11"
            python_arch: "x64"
            itch_channel: linux64_glibc_231
            api_artifact_name: linux2.31

          - os: ubuntu-22.04
            artifact_name: Genemod_Catmaker_Linux64_glibc2.35+.tar.xz
            python_version: "3.11"
            python_arch: "x64"
            itch_channel: linux64_glibc_235
            api_artifact_name: linux2.35

          - os: windows-2019
            artifact_name: Genemod_Catmaker_Win32.zip
            python_version: "3.8"
            python_arch: "x86"
            itch_channel: win32
            api_artifact_name: win32

          - os: windows-latest
            artifact_name: Genemod_Catmaker_Win64.zip
            python_version: "3.8"
            python_arch: "x64"
            itch_channel: win64
            api_artifact_name: win64

          - os: windows-latest
            artifact_name: Genemod_Catmaker_Win64_Windows10+.zip
            python_version: "3.11"
            python_arch: "x64"
            itch_channel: win64_10
            api_artifact_name: win10+

          - os: macos-13
            artifact_name: Genemod_Catmaker_macOS64.dmg
            python_version: "3.11"
            python_arch: "x64"
            itch_channel: osx64
            api_artifact_name: macOS

    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.ref, 'ref/heads/release') }}
=======
on: [push]

jobs:
  build_ubuntu_20_04:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.11 x64
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
      - name: Update pip
        run: python -m pip install --upgrade pip 
      - name: Update setuptools and wheel
        run: python -m pip install --upgrade setuptools wheel
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Install Pillow for icon format conversion
        run: python -m pip install --upgrade Pillow
      - name: Install PyInstaller
        run: python -m pip install --upgrade PyInstaller
      - name: Run PyInstaller
        #run: poetry run python3 -m PyInstaller -i resources/images/icon.png --name clangen --windowed --onedir --clean --add-data sprites:sprites --add-data resources:resources --add-data README.md:. main.py
        run: python3 -m PyInstaller Catmaker.spec
      - name: Create archive (.tar.xz)
        run: tar -caf Catmaker_Linux64_glibc2.31+.tar.xz -C dist Catmaker
      - uses: actions/upload-artifact@v4
        with:
          name: Catmaker_Linux64_glibc2.31+.tar.xz
          path: Catmaker_Linux64_glibc2.31+.tar.xz
          
  build_ubuntu_22_04:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.11 x64
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Update setuptools and wheel
        run: python -m pip install --upgrade setuptools wheel
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Install Pillow for icon format conversion
        run: python -m pip install --upgrade Pillow
      - name: Install PyInstaller
        run: python -m pip install --upgrade PyInstaller
      - name: Run PyInstaller
        #run: poetry run python3 -m PyInstaller -i resources/images/icon.png --name clangen --windowed --onedir --clean --add-data sprites:sprites --add-data resources:resources --add-data README.md:. main.py
        run: python3 -m PyInstaller Catmaker.spec
      - name: Create archive (.tar.xz)
        run: tar -caf Catmaker_Linux64_glibc2.35+.tar.xz -C dist Catmaker
      - uses: actions/upload-artifact@v4
        with:
          name: Catmaker_Linux64_glibc2.35+.tar.xz
          path: Catmaker_Linux64_glibc2.35+.tar.xz
          
  build_win32:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.8 x86
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' # 3.8 to support older versions of Windows
          architecture: 'x86'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Update setuptools and wheel
        run: python -m pip install --upgrade setuptools wheel
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Install Pillow for icon format conversion
        run: python -m pip install Pillow==9.4.0
      - name: Install PyInstaller
        run: python -m pip install --upgrade PyInstaller
      - name: Run PyInstaller
        #run: poetry run python3 -m PyInstaller -i resources/images/icon.png --name clangen --windowed --noupx --onedir --clean --add-data "sprites;sprites" --add-data "resources;resources" --add-data "README.md;." main.py
        run: python -m PyInstaller Catmaker.spec
      - name: Create archive (.zip)
        run: tar.exe -a -c -f Catmaker_Win32.zip -C dist Catmaker
      - uses: actions/upload-artifact@v4
        with:
          name: Catmaker_Win32
          path: Catmaker_Win32.zip
          
  build_win64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.8 x86
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' # 3.8 to support older versions of Windows
          architecture: 'x86'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Update setuptools and wheel
        run: python -m pip install --upgrade setuptools wheel
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Install Pillow for icon format conversion
        run: python -m pip install Pillow==9.4.0
      - name: Install PyInstaller
        run: python -m pip install --upgrade PyInstaller
      - name: Run PyInstaller
        #run: poetry run python3 -m PyInstaller -i resources/images/icon.png --name clangen --windowed --noupx --onedir --clean --add-data "sprites;sprites" --add-data "resources;resources" --add-data "README.md;." main.py
        run: python -m PyInstaller Catmaker.spec
      - name: Create archive (.zip)
        run: tar.exe -a -c -f Catmaker_Win32.zip -C dist Catmaker
      - uses: actions/upload-artifact@v4
        with:
          name: Catmaker_Win32
          path: Catmaker_Win32.zip
          
  build_win64_py311:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.11 x64
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Update setuptools and wheel
        run: python -m pip install --upgrade setuptools wheel
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Install Pillow for icon format conversion
        run: python -m pip install --upgrade Pillow
      - name: Install PyInstaller
        run: python -m pip install --upgrade PyInstaller
      # Example of an upx install, also requires adding "--upx-dir upx-4.0.0-win64" to the pyinst run
      #- name: Setup UPX 
      #  run: |
      #    curl -L -O https://github.com/upx/upx/releases/download/v4.0.0/upx-4.0.0-win64.zip
      #    tar.exe -x -v -f upx-4.0.0-win64.zip
      - name: Run PyInstaller
        #run: poetry run python3 -m PyInstaller -i resources/images/icon.png --name clangen --windowed --noupx --onedir --clean --add-data "sprites;sprites" --add-data "resources;resources" --add-data "README.md;." main.py
        run: python -m PyInstaller Catmaker.spec
      - name: Create archive (.zip)
        run: tar.exe -a -c -f Catmaker_Win64_Windows10+.zip -C dist Catmaker
      - uses: actions/upload-artifact@v4
        with:
          name: Catmaker_Win64_Windows10+
          path: Catmaker_Win64_Windows10+.zip
          
  build_macos64:
    # For commits to the original mac build action see:
    # https://github.com/Thlumyn/clangen/blob/29c9e39fed9a09b8de906f5c3b91dc044fe9b9a5/.github/workflows/main.yml
    runs-on: macos-latest
>>>>>>> cc9df10b99a63bff336f93d2be52c465259dbce8
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
<<<<<<< HEAD
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.1
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          architecture: ${{ matrix.python_arch }}
          cache: "poetry"
      - name: Install build dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential zlib1g-dev
      - name: Install build dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install zlib
      - name: Install Visual Studio Build Tools (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.1
      - name: Set up cargo cache (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: install dependencies
        run: poetry install --with build -E discord
      - name: Build PyInstaller bootloader
        run: |
          git clone https://github.com/pyinstaller/pyinstaller.git
          cd pyinstaller
          git checkout v6.11.0
          cd bootloader
          python ./waf all
          cd ../../
          poetry run pip install -e pyinstaller
      - name: Run PyInstaller
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: poetry run python -m PyInstaller Clangen.spec
      - name: Create archive (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: tar -caf ${{ matrix.artifact_name }} -C dist Genemod
      - name: Create archive (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: powershell
        run: |
          cp dist/Genemod/_internal/.itch.toml dist/ 
          tar.exe -a -c -f ${{ matrix.artifact_name }} -C dist Genemod .itch.toml
      - name: Create DMG (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          rm -r dist/Genemod
          npm install -g appdmg
          appdmg appdmg.json ${{ matrix.artifact_name }}
=======
      - name: Setup Python 3.11 x64
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      # - name: Install poetry
      #   uses: abatilo/actions-poetry@v2
      #   with:
      #     poetry-version: 1.4.1
      # - name: install dependencies
      #   run: poetry install --with build -E discord
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Update setuptools and wheel
        run: python -m pip install --upgrade setuptools wheel
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Install Pillow for icon format conversion
        run: python -m pip install --upgrade Pillow
      - name: Install PyInstaller
        run: python -m pip install --upgrade PyInstaller
      - name: Run PyInstaller
        #run: poetry run python3 -m PyInstaller -i resources/images/icon.png --name clangen --windowed --onedir --clean --add-data sprites:sprites --add-data resources:resources --add-data README.md:. main.py
        # run: poetry run python3 -m PyInstaller Clangen.spec
        run: python -m PyInstaller Catmaker.spec
      - name: Create archive (.tar.xz)
        run: rm -r dist/Catmaker
      - name: Install appdmg
        run: "npm install -g appdmg"
      - name: Generate .dmg
        run: "appdmg appdmg.json Catmaker_macOS64.dmg"
>>>>>>> cc9df10b99a63bff336f93d2be52c465259dbce8
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.artifact_name }}

  confirm_release:
    runs-on: ubuntu-22.04
    if: ${{ vars.USE_UPDATE_API != '' && (github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/tags/')) }}
    needs: build
    steps:
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
